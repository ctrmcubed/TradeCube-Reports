# Check with:
# helm3 lint tradecube-reports
# OPTIONS='--dry-run --debug'
# Run with:
# helm3 upgrade --install --namespace ${REPORTING_NAMESPACE} ${REPORTING_NAMESPACE} --set ingress.domain=${DOMAIN} --set env.certFile=${REPORTING_CERTFILE} --set env.certPassword=${REPORTING_CERTPASSWORD} --set env.apiDomain=${API_DOMAIN} tradecube-reports ${OPTIONS}

name:
  name: 'Tradecube-Reporting' # {{ .Values.name.name }}

env:
  HTTPPrefix: http://                  # {{ .Values.env.HTTPPrefix }}
  HTTPSPrefix: https://                # {{ .Values.env.HTTPSPrefix }}
  certFile: <not-set>                  # {{ .Values.env.certFile }}     
  certPassword: <not-set>              # {{ .Values.env.certPassword }}
  environment: <not-set>               # {{ .Values.env.environment }}
  apiDomain: https://api.tradecube.io  # {{ .Values.env.apiDomain }}
  apiPort: 443                         # {{ .Values.env.apiPort }}

service:
  port: 80       # {{ .Values.service.port }}
  targetPort: 80 # {{ .Values.service.targetPort }}
  httpPort: 80   # {{ .Values.service.httpPort }}
  httpsPort: 443 # {{ .Values.service.httpsPort }}
  protocol: TCP  # {{ .Values.service.protocol }}

ingress:
  domain: reporting.example.com

type:
  certificate: -certificate  # {{ .Values.type.certificate }}
  configmap: -config-map     # {{ .Values.type.configmap }}
  deployment: -deployment    # {{ .Values.type.deployment }}
  ingress: -ingress          # {{ .Values.type.ingress }}
  pod: -pod                  # {{ .Values.type.pod }}
  secret: -secret            # {{ .Values.type.secret }}
  service: -service          # {{ .Values.type.service }}

component:
  reporting: -reporting         # {{ .Values.component.reporting }}

letsencrypt:
  clusterIssuer: <TBA>        # {{ .Values.letsencrypt.clusterIssuer }}

certificate:
  volumeName: -cert-volume # {{ .Values.certificate.volumeName }}  
  volumeMountPath: /certs  # {{ .Values.certificate.volumeMountPath }}

image:
  repository: ctrmcubed        # {{ .Values.image.repository }}
  pullPolicy: IfNotPresent     # {{ .Values.image.pullPolicy }}
  reporting: tradecube-reports # {{ .Values.image.reporting }}
  reportingtag: latest-dev     # {{ .Values.image.reportingtag }}

port:   
  reporting: 44370     # {{ .Values.port.reporting }}
  reportingSsl: 44365  # {{ .Values.port.reportingSsl }}

restartPolicy:
  reporting: Always # {{ .Values.restartPolicy.reporting }}

replicas:
  reporting: 1 # {{ .Values.replicas.reporting }}

strategy:                
  type: RollingUpdate # {{ .Values.strategy.type }}
  maxSurge: 1         # {{ .Values.strategy.maxSurge }}
  maxUnavailable: 0   # {{ .Values.strategy.maxUnavailable }}

readinessProbe:           
  path: /health           # {{ .Values.readinessProbe.path }}
  initialDelaySeconds: 10 # {{ .Values.readinessProbe.initialDelaySeconds }}
  periodSeconds: 10       # {{ .Values.readinessProbe.periodSeconds }}
  timeoutSeconds: 2       # {{ .Values.timeoutSeconds.timeoutSeconds }}

livenessProbe:
  path: /health            # {{ .Values.livenessProbe.path }}
  initialDelaySeconds: 120 # {{ .Values.livenessProbe.initialDelaySeconds }}
  periodSeconds: 30        # {{ .Values.livenessProbe.periodSeconds }}
  timeoutSeconds: 2        # {{ .Values.timeoutSeconds.timeoutSeconds }} 